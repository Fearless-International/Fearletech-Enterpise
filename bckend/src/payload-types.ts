/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    users: User;
    media: Media;
    projects: Project;
    'logo-branding-projects': LogoBrandingProject;
    'video-editing-animation-projects': VideoEditingAnimationProject;
    'creative-branding-projects': CreativeBrandingProject;
    'social-media-management-projects': SocialMediaManagementProject;
    'content-creation-projects': ContentCreationProject;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    projects: ProjectsSelect<false> | ProjectsSelect<true>;
    'logo-branding-projects': LogoBrandingProjectsSelect<false> | LogoBrandingProjectsSelect<true>;
    'video-editing-animation-projects': VideoEditingAnimationProjectsSelect<false> | VideoEditingAnimationProjectsSelect<true>;
    'creative-branding-projects': CreativeBrandingProjectsSelect<false> | CreativeBrandingProjectsSelect<true>;
    'social-media-management-projects': SocialMediaManagementProjectsSelect<false> | SocialMediaManagementProjectsSelect<true>;
    'content-creation-projects': ContentCreationProjectsSelect<false> | ContentCreationProjectsSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: string;
  };
  globals: {};
  globalsSelect: {};
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: string;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "projects".
 */
export interface Project {
  id: string;
  client: string;
  date?: string | null;
  duration?: string | null;
  cost?: string | null;
  mainImage?: (string | null) | Media;
  secondaryImage?: (string | null) | Media;
  title: string;
  description?: string | null;
  link: string;
  steps?:
    | {
        title?: string | null;
        text?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "logo-branding-projects".
 */
export interface LogoBrandingProject {
  id: string;
  client: string;
  date?: string | null;
  duration?: string | null;
  cost?: string | null;
  mainImage?: (string | null) | Media;
  secondaryImages?:
    | {
        image: string | Media;
        alt?: string | null;
        id?: string | null;
      }[]
    | null;
  title: string;
  description?: string | null;
  steps?:
    | {
        title?: string | null;
        text?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "video-editing-animation-projects".
 */
export interface VideoEditingAnimationProject {
  id: string;
  client: string;
  date?: string | null;
  duration?: string | null;
  cost?: string | null;
  videoUrl: string;
  secondaryImages?:
    | {
        image: string | Media;
        alt?: string | null;
        id?: string | null;
      }[]
    | null;
  title: string;
  description?: string | null;
  steps?:
    | {
        title?: string | null;
        text?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "creative-branding-projects".
 */
export interface CreativeBrandingProject {
  id: string;
  title: string;
  mainImageUrl: string;
  client: string;
  date?: string | null;
  duration?: string | null;
  cost?: string | null;
  description?: string | null;
  steps?:
    | {
        title?: string | null;
        text?: string | null;
        id?: string | null;
      }[]
    | null;
  gallery?:
    | {
        imageUrl: string;
        alt?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "social-media-management-projects".
 */
export interface SocialMediaManagementProject {
  id: string;
  title: string;
  mainImageUrl: string;
  description: string;
  gallery?:
    | {
        imageUrl: string;
        alt?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "content-creation-projects".
 */
export interface ContentCreationProject {
  id: string;
  title: string;
  mainImageUrl: string;
  description: string;
  gallery?:
    | {
        imageUrl: string;
        alt?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: string;
  document?:
    | ({
        relationTo: 'users';
        value: string | User;
      } | null)
    | ({
        relationTo: 'media';
        value: string | Media;
      } | null)
    | ({
        relationTo: 'projects';
        value: string | Project;
      } | null)
    | ({
        relationTo: 'logo-branding-projects';
        value: string | LogoBrandingProject;
      } | null)
    | ({
        relationTo: 'video-editing-animation-projects';
        value: string | VideoEditingAnimationProject;
      } | null)
    | ({
        relationTo: 'creative-branding-projects';
        value: string | CreativeBrandingProject;
      } | null)
    | ({
        relationTo: 'social-media-management-projects';
        value: string | SocialMediaManagementProject;
      } | null)
    | ({
        relationTo: 'content-creation-projects';
        value: string | ContentCreationProject;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "projects_select".
 */
export interface ProjectsSelect<T extends boolean = true> {
  client?: T;
  date?: T;
  duration?: T;
  cost?: T;
  mainImage?: T;
  secondaryImage?: T;
  title?: T;
  description?: T;
  link?: T;
  steps?:
    | T
    | {
        title?: T;
        text?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "logo-branding-projects_select".
 */
export interface LogoBrandingProjectsSelect<T extends boolean = true> {
  client?: T;
  date?: T;
  duration?: T;
  cost?: T;
  mainImage?: T;
  secondaryImages?:
    | T
    | {
        image?: T;
        alt?: T;
        id?: T;
      };
  title?: T;
  description?: T;
  steps?:
    | T
    | {
        title?: T;
        text?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "video-editing-animation-projects_select".
 */
export interface VideoEditingAnimationProjectsSelect<T extends boolean = true> {
  client?: T;
  date?: T;
  duration?: T;
  cost?: T;
  videoUrl?: T;
  secondaryImages?:
    | T
    | {
        image?: T;
        alt?: T;
        id?: T;
      };
  title?: T;
  description?: T;
  steps?:
    | T
    | {
        title?: T;
        text?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "creative-branding-projects_select".
 */
export interface CreativeBrandingProjectsSelect<T extends boolean = true> {
  title?: T;
  mainImageUrl?: T;
  client?: T;
  date?: T;
  duration?: T;
  cost?: T;
  description?: T;
  steps?:
    | T
    | {
        title?: T;
        text?: T;
        id?: T;
      };
  gallery?:
    | T
    | {
        imageUrl?: T;
        alt?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "social-media-management-projects_select".
 */
export interface SocialMediaManagementProjectsSelect<T extends boolean = true> {
  title?: T;
  mainImageUrl?: T;
  description?: T;
  gallery?:
    | T
    | {
        imageUrl?: T;
        alt?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "content-creation-projects_select".
 */
export interface ContentCreationProjectsSelect<T extends boolean = true> {
  title?: T;
  mainImageUrl?: T;
  description?: T;
  gallery?:
    | T
    | {
        imageUrl?: T;
        alt?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}